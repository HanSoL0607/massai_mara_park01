name: massai mara park 01 compose dockerhub multiple jobs

on: workflow_dispatch

env:
  DOCKER_USERNAME: bizon1022
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  IMAGE_NAME: massai_mara
  IMAGE_TAG: v${{ github.run_number }}

jobs:
  build_image:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha # gha: github actiions cache
          cache-to: type=gha, mode=max

      - name: check image
        run: |
          docker image ls

      - name: save docker image
        run: |
          docker save ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} > image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  hub_push:
    needs: build_image
    runs-on: ubuntu-22.04
    steps:
      - name: download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: check downloaded files
        run: ls -al

      - name: load docker image
        run: |
          docker load < image.tar

      - name: Login to Docker Hub
        run: echo "${{ env.DOCKER_TOKEN }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: docker operations
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker tag ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker search ${{ env.IMAGE_NAME}}:latest

      - name: logout from docker hub
        if: always()
        run: docker logout

  run_test:
    needs: hub_push
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: run with docker compose
        run: |
          docker compose -f ./compose-multijobs.yaml up -d   # -f: specify the compose file
          sleep 30

          docker compose ps
          docker compose logs

      - name: run automated test #1
        run: curl http://localhost:8080 || exit 1

      - name: run automated test #2
        run: curl http://localhost:8080/images || exit 1

      - name: run automated test #3
        run: curl http://localhost:8080/animal || exit 1
